{"title":"Hadoop搭建简易分布式集群","uid":"3e4c7b56240531255ad11affc0c50a94","slug":"Hadoop搭建简易分布式集群","date":"2022-05-31T07:14:45.000Z","updated":"2022-05-31T13:48:59.433Z","comments":true,"path":"api/articles/Hadoop搭建简易分布式集群.json","keywords":null,"cover":"/post/Hadoop搭建简易分布式集群/cover.jpeg","content":"<p>使用三台机器创建Hadoop简易主从分布式集群，实现一个一主两从的Hadoop集群</p>\n<hr>\n<h3 id=\"Hadoop简易分布式集群搭建\"><a href=\"#Hadoop简易分布式集群搭建\" class=\"headerlink\" title=\"Hadoop简易分布式集群搭建\"></a>Hadoop简易分布式集群搭建</h3><p><img src=\"/post/Hadoop%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4/install-4.png\" alt=\"Hadoop\"></p>\n<h4 id=\"1-环境准备\"><a href=\"#1-环境准备\" class=\"headerlink\" title=\"1. 环境准备\"></a>1. 环境准备</h4><p>规划三个虚拟机节点：bd01、bd02、bd03</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">bd01 192.168.126.201\n\nbd02 192.168.126.202\n\nbd03 192.168.126.203</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：每个节点的基础环境都要先配置好，先把ip、hostname、firewalld、ssh免密码登录、JDK这些基础环境配置好。</p>\n<p>SSH免密配置：</p>\n<ul>\n<li><p>首先在bd01上执行ssh-keygen -t rsa,生产SSH密钥</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 ~]# ssh-keygen -t rsa\n[root@bd01 ~]# cd .ssh&#x2F;\n[root@bd01 .ssh]# ll\n-rw-------. 1 root root 1675 5月  31 16:37 id_rsa\n-rw-r--r--. 1 root root  391 5月  31 16:37 id_rsa.pub</code></pre></li>\n<li><p>分别执行ssh-copy-id 到bd01、bd02、bd03</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 .ssh]# ssh-copy-id bd01\n[root@bd01 .ssh]# ssh-copy-id bd02\n[root@bd01 .ssh]# ssh-copy-id bd03</code></pre></li>\n</ul></blockquote>\n<h4 id=\"2-配置集群节点之间时间同步\"><a href=\"#2-配置集群节点之间时间同步\" class=\"headerlink\" title=\"2. 配置集群节点之间时间同步\"></a>2. 配置集群节点之间时间同步</h4><p>集群只要涉及到多个节点的就需要对这些节点做时间同步，如果节点之间时间不同步相差太多，会应该集群的稳定性，甚至导致集群出问题。</p>\n<p>首先在bigdata01节点上操作，使用ntpdate -u ntp.sjtu.edu.cn实现时间同步，但是执行的时候提示找不到ntpdata命令</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 .ssh]# ntpdate -u ntp.sjtu.edu.cn\n-bash: ntpdate: 未找到命令</code></pre>\n\n<p>默认是没有ntpdate命令的，需要使用yum在线安装，bd01、bd02、bd03分别执行命令 yum install -y ntpdate</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 .ssh]# yum install -y ntpdate\n已加载插件：fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirrors.aliyun.com\n * extras: mirrors.aliyun.com\n * updates: mirrors.cn99.com\nbase                                                                            | 3.6 kB  00:00:00     \nextras                                                                          | 2.9 kB  00:00:00     \nupdates                                                                         | 2.9 kB  00:00:00     \n正在解决依赖关系\n--&gt; 正在检查事务\n---&gt; 软件包 ntpdate.x86_64.0.4.2.6p5-29.el7.centos.2 将被 安装\n--&gt; 解决依赖关系完成\n\n依赖关系解决\n\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n Package              架构                版本                                 源                 大小\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n正在安装:\n ntpdate              x86_64              4.2.6p5-29.el7.centos.2              base               87 k\n\n事务概要\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n安装  1 软件包\n\n总下载量：87 k\n安装大小：121 k\nDownloading packages:\nntpdate-4.2.6p5-29.el7.centos.2.x86_64.rpm                                      |  87 kB  00:00:00     \nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  正在安装    : ntpdate-4.2.6p5-29.el7.centos.2.x86_64                                             1&#x2F;1 \n  验证中      : ntpdate-4.2.6p5-29.el7.centos.2.x86_64                                             1&#x2F;1 \n\n已安装:\n  ntpdate.x86_64 0:4.2.6p5-29.el7.centos.2                                                             \n\n完毕！</code></pre>\n\n<p>然后手动执行ntpdate -u ntp.sjtu.edu.cn 确认是否可以正常执行</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 .ssh]# ntpdate -u ntp.sjtu.edu.cn\n31 May 16:58:43 ntpdate[1665]: adjust time server 202.118.1.81 offset 0.096553 sec</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>建议把这个同步时间的操作添加到linux的crontab定时器中，每分钟执行一次</p></blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 .ssh]# vim &#x2F;etc&#x2F;crontab \n* * * * * root &#x2F;usr&#x2F;sbin&#x2F;ntpdate -u ntp.sjtu.edu.cn</code></pre>\n\n<h4 id=\"3-首先在bd01节点上安装hadoop\"><a href=\"#3-首先在bd01节点上安装hadoop\" class=\"headerlink\" title=\"3. 首先在bd01节点上安装hadoop\"></a>3. 首先在bd01节点上安装hadoop</h4><ul>\n<li><p>解压hadoop安装包</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop-3.2.0]# tar -zxvf hadoop-3.2.0.tar.gz -C &#x2F;opt&#x2F;moudle&#x2F;\n[root@bd01 hadoop-3.2.0]# cd &#x2F;opt&#x2F;moudle&#x2F;\n[root@bd01 moudle]# ll\n总用量 0\ndrwxr-xr-x. 9 1001 1002 149 1月   8 2019 hadoop-3.2.0\ndrwxr-xr-x. 7   10  143 245 10月  6 2018 jdk1.8.0_191</code></pre></li>\n<li><p>修改hadoop配置文件</p>\n<ul>\n<li><p>首先修改hadoop-env.sh文件，在文件末尾增加环境变量信息</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop]# vim hadoop-env.sh\nexport JAVA_HOME&#x3D;&#x2F;opt&#x2F;moudle&#x2F;jdk1.8.0_191\nexport HADOOP_LOG_DIR&#x3D;&#x2F;data&#x2F;hadoop_repo&#x2F;logs&#x2F;hadoop</code></pre></li>\n<li><p>修改core-site.xml文件，注意fs.defaultFS属性中的主机名需要和主节点的主机名保持一致</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop]# vim core-site.xml \n&lt;configuration&gt;\n    &lt;property&gt;\n        &lt;name&gt;fs.defaultFS&lt;&#x2F;name&gt;\n        &lt;value&gt;hdfs:&#x2F;&#x2F;bd01:9000&lt;&#x2F;value&gt;\n    &lt;&#x2F;property&gt;\n    &lt;property&gt;\n        &lt;name&gt;hadoop.tmp.dir&lt;&#x2F;name&gt;\n        &lt;value&gt;&#x2F;data&#x2F;hadoop_repo&lt;&#x2F;value&gt;\n   &lt;&#x2F;property&gt;\n&lt;&#x2F;configuration&gt;</code></pre></li>\n<li><p>修改hdfs-site.xml文件，把hdfs中文件副本的数量设置为2(默认为3)，最多为2，因为现在集群中有两个从节点，还有secondaryNamenode进程所在的节点信息</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop]# vim hdfs-site.xml \n&lt;configuration&gt;\n    &lt;property&gt;\n        &lt;name&gt;dfs.replication&lt;&#x2F;name&gt;\n        &lt;value&gt;2&lt;&#x2F;value&gt;\n    &lt;&#x2F;property&gt;\n    &lt;property&gt;\n        &lt;name&gt;dfs.namenode.secondary.http-address&lt;&#x2F;name&gt;\n        &lt;value&gt;bd01:50090&lt;&#x2F;value&gt;\n    &lt;&#x2F;property&gt;\n&lt;&#x2F;configuration&gt;</code></pre></li>\n<li><p>修改mapred-site.xml，设置mapreduce使用的资源调度框架</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop]# vim mapred-site.xml \n&lt;configuration&gt;\n    &lt;property&gt;\n        &lt;name&gt;mapreduce.framework.name&lt;&#x2F;name&gt;\n        &lt;value&gt;yarn&lt;&#x2F;value&gt;\n    &lt;&#x2F;property&gt;\n&lt;&#x2F;configuration&gt;</code></pre></li>\n<li><p>修改yarn-site.xml，设置yarn上支持运行的服务和环境变量白名单</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意，针对分布式集群在这个配置文件中还需要设置resourcemanager的hostname，否则nodemanager找不到resourcemanager节点。</p></blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop]# vim yarn-site.xml \n&lt;configuration&gt;\n    &lt;property&gt;\n        &lt;name&gt;yarn.nodemanager.aux-services&lt;&#x2F;name&gt;\n        &lt;value&gt;mapreduce_shuffle&lt;&#x2F;value&gt;\n    &lt;&#x2F;property&gt;\n    &lt;property&gt;\n        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;&#x2F;name&gt;\n        &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME&lt;&#x2F;value&gt;\n    &lt;&#x2F;property&gt;\n    &lt;property&gt;\n        &lt;name&gt;yarn.resourcemanager.hostname&lt;&#x2F;name&gt;\n        &lt;value&gt;bd01&lt;&#x2F;value&gt;\n    &lt;&#x2F;property&gt;\n&lt;&#x2F;configuration&gt;</code></pre></li>\n<li><p>修改workers文件，增加所有从节点的主机名，一个一行</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop]# vim workers \nbd02\nbd03</code></pre></li>\n<li><p>修改启动脚本</p>\n<p>修改start-dfs.sh，stop-dfs.sh这两个脚本文件，在文件前面增加如下内容</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 sbin]# vim start-dfs.sh \nHDFS_DATANODE_USER&#x3D;root\nHDFS_DATANODE_SECURE_USER&#x3D;hdfs\nHDFS_NAMENODE_USER&#x3D;root\nHDFS_SECONDARYNAMENODE_USER&#x3D;root\n[root@bd01 sbin]# vim stop-dfs.sh \nHDFS_DATANODE_USER&#x3D;root\nHDFS_DATANODE_SECURE_USER&#x3D;hdfs\nHDFS_NAMENODE_USER&#x3D;root\nHDFS_SECONDARYNAMENODE_USER&#x3D;root</code></pre>\n\n<p>修改start-yarn.sh，stop-yarn.sh这两个脚本文件，在文件前面增加如下内容</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 sbin]# vim start-yarn.sh \nYARN_RESOURCEMANAGER_USER&#x3D;root\nHADOOP_SECURE_DN_USER&#x3D;yarn\nYARN_NODEMANAGER_USER&#x3D;root\n[root@bd01 sbin]# vim stop-yarn.sh \nYARN_RESOURCEMANAGER_USER&#x3D;root\nHADOOP_SECURE_DN_USER&#x3D;yarn\nYARN_NODEMANAGER_USER&#x3D;root</code></pre></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4-编写xcall和xsync脚本\"><a href=\"#4-编写xcall和xsync脚本\" class=\"headerlink\" title=\"4. 编写xcall和xsync脚本\"></a>4. 编写xcall和xsync脚本</h4><p>集群中有多台机器，配置启动集群每次都需要去每台机器上执行一遍相同的命令以及拷贝文件，为了简化操作，编写xcall脚本和xsync脚本</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>xcall脚本功能：xcall + 命令，会在集群中的每台机器上都执行一遍此命令，并把结果输出</p>\n<p>xsycn脚本功能：xsync+ 文件/文件夹，会指定的文件/文件夹同步文件到集群中的每台机器中。</p></blockquote>\n<ul>\n<li><p>xcall脚本</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#!&#x2F;bin&#x2F;bash\npcount&#x3D;$#\nif((pcount&#x3D;&#x3D;0));then\n        echo no args;\n        exit;\nfi\n\n#注释掉下面两行,不注释当前主机会执行两次命令\n#echo -------------localhost----------\n#$@\nfor((host&#x3D;1; host&lt;&#x3D;3; host++)); do\n        echo ----------bd0$host---------\n        ssh bd0$host $@\ndone</code></pre>\n\n<p>功能验证：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 sbin]# xcall pwd\n----------bd01---------\n&#x2F;root\n----------bd02---------\n&#x2F;root\n----------bd03---------\n&#x2F;root</code></pre></li>\n<li><p>xsync脚本</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#!&#x2F;bin&#x2F;bash\n# $#：表示传递给脚本或函数的参数个数。\n#1 获取输入参数个数，如果没有参数，直接退出\npcount&#x3D;$#\nif((pcount&#x3D;&#x3D;0)); then\necho no args;\nexit;\nfi\n\n#2 获取文件名称\np1&#x3D;$1\nfname&#x3D;&#96;basename $p1&#96;\necho fname&#x3D;$fname\n\n#3 获取上级目录到绝对路径\npdir&#x3D;&#96;cd -P $(dirname $p1); pwd&#96;\necho pdir&#x3D;$pdir\n\n#4 获取当前用户名称\nuser&#x3D;&#96;whoami&#96;\n\n#5 循环\nfor((host&#x3D;1; host&lt;4; host++)); do\n       echo --------------- bd0$host ----------------\n       rsync -rvl $pdir&#x2F;$fname $user@bd0$host:$pdir\ndone</code></pre>\n\n<p>功能验证</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 moudle]# mkdir xysnc-test\n[root@bd01 moudle]# xsync xysnc-test&#x2F;\nfname&#x3D;xysnc-test\npdir&#x3D;&#x2F;opt&#x2F;moudle\n--------------- bd01 ----------------\nsending incremental file list\n\nsent 59 bytes  received 17 bytes  50.67 bytes&#x2F;sec\ntotal size is 0  speedup is 0.00\n--------------- bd02 ----------------\nsending incremental file list\nxysnc-test&#x2F;\n\nsent 62 bytes  received 20 bytes  164.00 bytes&#x2F;sec\ntotal size is 0  speedup is 0.00\n--------------- bd03 ----------------\nsending incremental file list\nxysnc-test&#x2F;\n\nsent 62 bytes  received 20 bytes  164.00 bytes&#x2F;sec\ntotal size is 0  speedup is 0.00</code></pre></li>\n</ul>\n<h4 id=\"5-把bd01节点上将修改好配置的安装包拷贝到其他两个从节点-并在在bd01节点上格式化HDFS\"><a href=\"#5-把bd01节点上将修改好配置的安装包拷贝到其他两个从节点-并在在bd01节点上格式化HDFS\" class=\"headerlink\" title=\"5. 把bd01节点上将修改好配置的安装包拷贝到其他两个从节点,并在在bd01节点上格式化HDFS\"></a>5. 把bd01节点上将修改好配置的安装包拷贝到其他两个从节点,并在在bd01节点上格式化HDFS</h4><ul>\n<li><p>同步hadoop到bd02和bd03</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 moudle]# xsync hadoop-3.2.0&#x2F;</code></pre></li>\n<li><p>在bd01节点上格式化HDFS</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop-3.2.0]# bin&#x2F;hdfs namenode -format</code></pre>\n\n<p>如果在后面的日志信息中能看到这一行，则说明namenode格式化成功。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">2022-05-31 21:15:15,324 INFO common.Storage: Storage directory &#x2F;data&#x2F;hadoop_repo&#x2F;dfs&#x2F;name has been successfully formatted.</code></pre></li>\n</ul>\n<h4 id=\"6-启动集群\"><a href=\"#6-启动集群\" class=\"headerlink\" title=\"6. 启动集群\"></a>6. 启动集群</h4><p>在bd01上执行命令</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop-3.2.0]# sbin&#x2F;start-all.sh \nStarting namenodes on [bd01]\n上一次登录：二 5月 31 21:22:48 CST 2022pts&#x2F;0 上\nStarting datanodes\n上一次登录：二 5月 31 21:23:47 CST 2022pts&#x2F;0 上\nbd03: WARNING: &#x2F;data&#x2F;hadoop_repo&#x2F;logs&#x2F;hadoop does not exist. Creating.\nStarting secondary namenodes [bd01]\n上一次登录：二 5月 31 21:23:49 CST 2022pts&#x2F;0 上\nStarting resourcemanager\n上一次登录：二 5月 31 21:23:55 CST 2022pts&#x2F;0 上\nStarting nodemanagers\n上一次登录：二 5月 31 21:24:00 CST 2022pts&#x2F;0 上</code></pre>\n\n<h4 id=\"7-验证集群\"><a href=\"#7-验证集群\" class=\"headerlink\" title=\"7. 验证集群\"></a>7. 验证集群</h4><p>使用xcall命令操作集群，验证hadoop集群是否搭建成功</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop]# xcall jps\n----------bd01---------\n5520 ResourceManager\n5267 SecondaryNameNode\n5879 Jps\n4973 NameNode\n----------bd02---------\n2402 DataNode\n2516 NodeManager\n2635 Jps\n----------bd03---------\n2022 DataNode\n2137 NodeManager\n2235 Jps</code></pre>\n\n<h4 id=\"8-停止集群\"><a href=\"#8-停止集群\" class=\"headerlink\" title=\"8. 停止集群\"></a>8. 停止集群</h4><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@bd01 hadoop]# stop-all.sh \nStopping namenodes on [bd01]\n上一次登录：二 5月 31 21:24:03 CST 2022pts&#x2F;0 上\nStopping datanodes\n上一次登录：二 5月 31 21:26:35 CST 2022pts&#x2F;0 上\nStopping secondary namenodes [bd01]\n上一次登录：二 5月 31 21:26:36 CST 2022pts&#x2F;0 上\nStopping nodemanagers\n上一次登录：二 5月 31 21:26:39 CST 2022pts&#x2F;0 上\nStopping resourcemanager\n上一次登录：二 5月 31 21:26:42 CST 2022pts&#x2F;0 上</code></pre>\n\n<p>Hadoop集群搭建成功！</p>\n","feature":true,"text":"使用三台机器创建Hadoop简易主从分布式集群，实现一个一主两从的Hadoop集群 Hadoop简易分布式集群搭建 1. 环境准备规划三个虚拟机节点：bd01、bd02、bd03 bd01 192.168.126.201 bd02 192.168.126.202 bd03 192...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Hadoop","slug":"Hadoop","count":2,"path":"api/categories/Hadoop.json"}],"tags":[{"name":"Hadoop","slug":"Hadoop","count":2,"path":"api/tags/Hadoop.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Hadoop%E7%AE%80%E6%98%93%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">Hadoop简易分布式集群搭建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\"><span class=\"toc-text\">1. 环境准备</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E9%85%8D%E7%BD%AE%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E4%B9%8B%E9%97%B4%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5\"><span class=\"toc-text\">2. 配置集群节点之间时间同步</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E9%A6%96%E5%85%88%E5%9C%A8bd01%E8%8A%82%E7%82%B9%E4%B8%8A%E5%AE%89%E8%A3%85hadoop\"><span class=\"toc-text\">3. 首先在bd01节点上安装hadoop</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-%E7%BC%96%E5%86%99xcall%E5%92%8Cxsync%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">4. 编写xcall和xsync脚本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-%E6%8A%8Abd01%E8%8A%82%E7%82%B9%E4%B8%8A%E5%B0%86%E4%BF%AE%E6%94%B9%E5%A5%BD%E9%85%8D%E7%BD%AE%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%E6%8B%B7%E8%B4%9D%E5%88%B0%E5%85%B6%E4%BB%96%E4%B8%A4%E4%B8%AA%E4%BB%8E%E8%8A%82%E7%82%B9-%E5%B9%B6%E5%9C%A8%E5%9C%A8bd01%E8%8A%82%E7%82%B9%E4%B8%8A%E6%A0%BC%E5%BC%8F%E5%8C%96HDFS\"><span class=\"toc-text\">5. 把bd01节点上将修改好配置的安装包拷贝到其他两个从节点,并在在bd01节点上格式化HDFS</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-%E5%90%AF%E5%8A%A8%E9%9B%86%E7%BE%A4\"><span class=\"toc-text\">6. 启动集群</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-%E9%AA%8C%E8%AF%81%E9%9B%86%E7%BE%A4\"><span class=\"toc-text\">7. 验证集群</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-%E5%81%9C%E6%AD%A2%E9%9B%86%E7%BE%A4\"><span class=\"toc-text\">8. 停止集群</span></a></li></ol></li></ol>","author":{"name":"张春博","slug":"blog-author","avatar":"/images/QD20000163.jpg","link":"/","description":"研发及交付中心<br>零售开发组<br>手机银行","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"数据仓库Hive入门","uid":"c0a885913ce34c6575f9b0ea8cad6584","slug":"数据仓库Hive入门","date":"2022-06-01T08:23:04.000Z","updated":"2022-06-02T08:25:15.861Z","comments":true,"path":"api/articles/数据仓库Hive入门.json","keywords":null,"cover":"/post/数据仓库Hive入门/cover.jpeg","text":" Hive是建立在Hadoop上的数据仓库基础构架。它提供了一系列的工具，可以用来进行数据提取转化加载，可以简称为ETL。 什么是Hive Hive 定义了简单的类SQL查询语言，称为HQL，它允许熟悉SQL的用户直接查询Hadoop中的数据，同时，这个语言也允许熟悉MapRed...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"Hive","slug":"Hive","count":1,"path":"api/categories/Hive.json"}],"tags":[{"name":"Hive","slug":"Hive","count":1,"path":"api/tags/Hive.json"}],"author":{"name":"张春博","slug":"blog-author","avatar":"/images/QD20000163.jpg","link":"/","description":"研发及交付中心<br>零售开发组<br>手机银行","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Hadoop搭建伪分布式集群","uid":"bb0b195ced0db413665f5bd6467e3504","slug":"Hadoop搭建伪分布式集群","date":"2022-05-30T06:07:49.000Z","updated":"2022-05-30T07:50:35.546Z","comments":true,"path":"api/articles/Hadoop搭建伪分布式集群.json","keywords":null,"cover":"/post/Hadoop搭建伪分布式集群/cover.jpeg","text":" Hadoop伪分布式集群即在一台Linux机器上部署Hadoop集群，通过开通不同的端口来实现相应集群搭建。 Hadoop伪分布式集群安装 这张图代表是一台Linux机器，也可以称为是一个节点，上面安装的有JDK环境 最上面的是Hadoop集群会启动的进程，其中NameNode...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"Hadoop","slug":"Hadoop","count":2,"path":"api/categories/Hadoop.json"}],"tags":[{"name":"Hadoop","slug":"Hadoop","count":2,"path":"api/tags/Hadoop.json"}],"author":{"name":"张春博","slug":"blog-author","avatar":"/images/QD20000163.jpg","link":"/","description":"研发及交付中心<br>零售开发组<br>手机银行","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}